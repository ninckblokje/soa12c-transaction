<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Sun May 22 11:06:49 CEST 2016
  Author:  ninckblokje
  Type: BPEL 2.0 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="BaronProcess"
               targetNamespace="http://xmlns.oracle.com/TransactionsSOA/SyncTransactionService/BaronProcess"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.oracle.com/TransactionsSOA/SyncTransactionService/BaronProcess"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:ui="http://xmlns.oracle.com/soa/designer"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://xmlns.oracle.com/TransactionsSOA/SyncTransactionService/NewTransactionProcess"
         xmlns:ns2="http://xmlns.oracle.com/TransactionsSOA/SyncTransactionService/TransactionProcess"
         xmlns:ns3="http://xmlns.oracle.com/TransactionsSOA/SyncTransactionService/NoTransactionProcess"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ess="http://xmlns.oracle.com/scheduler" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns4="http://xmlns.oracle.com/pcbpel/adapter/db/TransactionsSOA/SyncTransactionService/TransactionDbAdapter"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:ns5="http://xmlns.oracle.com/pcbpel/adapter/db/top/TransactionDbAdapter">

    <import ui:processWSDL="true" namespace="http://xmlns.oracle.com/TransactionsSOA/SyncTransactionService/BaronProcess" location="../WSDLs/BaronProcess.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="baronprocess_client" partnerLinkType="client:BaronProcess" myRole="BaronProcessProvider"/>
    <partnerLink name="NewTransactionProcess.newtransactionprocess_client" partnerLinkType="ns1:NewTransactionProcess"
                 partnerRole="NewTransactionProcessProvider"/>
    <partnerLink name="TransactionProcess.transactionprocess_client" partnerLinkType="ns2:TransactionProcess"
                 partnerRole="TransactionProcessProvider"/>
    <partnerLink name="NoTransactionProcess.notransactionprocess_client" partnerLinkType="ns3:NoTransactionProcess"
                 partnerRole="NoTransactionProcessProvider"/>
    <partnerLink name="TransactionDbAdapter" partnerLinkType="ns4:TransactionDbAdapter_plt"
                 partnerRole="TransactionDbAdapter_role"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:BaronProcessRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="client:BaronProcessResponseMessage"/>
    <variable name="InvokeNewTransactionProces_process_InputVariable"
              messageType="ns1:NewTransactionProcessRequestMessage"/>
    <variable name="InvokeNewTransactionProces_process_OutputVariable"
              messageType="ns1:NewTransactionProcessResponseMessage"/>
    <variable name="InvokeTransactionProcess_process_InputVariable" messageType="ns2:TransactionProcessRequestMessage"/>
    <variable name="InvokeTransactionProcess_process_OutputVariable"
              messageType="ns2:TransactionProcessResponseMessage"/>
    <variable name="InvokeNoTransactionProcess_process_InputVariable"
              messageType="ns3:NoTransactionProcessRequestMessage"/>
    <variable name="InvokeNoTransactionProcess_process_OutputVariable"
              messageType="ns3:NoTransactionProcessResponseMessage"/>
    <variable name="InvokeInsert_insert_InputVariable" messageType="ns4:TransactionCollection_msg"/>
  </variables>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in BaronProcess.wsdl) -->
    <receive name="receiveInput" partnerLink="baronprocess_client" portType="client:BaronProcess" operation="process" variable="inputVariable" createInstance="yes"/>
    <if name="IfTransaction">
      <documentation>
        <![CDATA[Transaction]]>
      </documentation>
      <condition>$inputVariable.payload/client:input='transaction'</condition>
      <invoke name="InvokeTransactionProcess" bpelx:invokeAsDetail="no"
              partnerLink="TransactionProcess.transactionprocess_client" portType="ns2:TransactionProcess"
              operation="process" inputVariable="InvokeTransactionProcess_process_InputVariable"
              outputVariable="InvokeTransactionProcess_process_OutputVariable"/>
      <elseif>
        <documentation>
          <![CDATA[NewTransaction]]>
        </documentation>
        <condition>$inputVariable.payload/client:input='newtransaction'</condition>
        <invoke name="InvokeNewTransactionProces" bpelx:invokeAsDetail="no"
                partnerLink="NewTransactionProcess.newtransactionprocess_client" portType="ns1:NewTransactionProcess"
                operation="process" inputVariable="InvokeNewTransactionProces_process_InputVariable"
                outputVariable="InvokeNewTransactionProces_process_OutputVariable"/>
      </elseif>
      <elseif>
        <documentation>
          <![CDATA[NoTransaction]]>
        </documentation>
        <condition>$inputVariable.payload/client:input='notransaction'</condition>
        <invoke name="InvokeNoTransactionProcess" bpelx:invokeAsDetail="no"
                partnerLink="NoTransactionProcess.notransactionprocess_client" portType="ns3:NoTransactionProcess"
                operation="process" inputVariable="InvokeNoTransactionProcess_process_InputVariable"
                outputVariable="InvokeNoTransactionProcess_process_OutputVariable"/>
      </elseif>
      <else>
        <empty name="Nothing"/>
      </else>
    </if>
    <sequence name="InsertTransaction">
      <assign name="AssignInsertRequest">
        <copy>
          <from>4</from>
          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInsert_insert_InputVariable.TransactionCollection/ns5:Transaction/ns5:pk</to>
        </copy>
        <copy>
          <from>ora:getComponentName()</from>
          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInsert_insert_InputVariable.TransactionCollection/ns5:Transaction/ns5:value1</to>
        </copy>
        <copy>
          <from>ora:getCompositeName()</from>
          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInsert_insert_InputVariable.TransactionCollection/ns5:Transaction/ns5:value2</to>
        </copy>
      </assign>
      <invoke name="InvokeInsert" bpelx:invokeAsDetail="no" partnerLink="TransactionDbAdapter"
              portType="ns4:TransactionDbAdapter_ptt" operation="insert"
              inputVariable="InvokeInsert_insert_InputVariable"/>
    </sequence>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="baronprocess_client" portType="client:BaronProcess" operation="process" variable="outputVariable"/>
  </sequence>
</process>